//Domain.cpp
//模板类试验的主函数

#include "tmp.h"
#include "Fraction.h"
#include <math.h>
#include"MatrixT.h"
#include "PolyApproxT.h"
#include "MTApp.h"
#include "SimpleLpT.h"

#define MNPV(x) cout<<#x":"<<endl;\
				(x).Print();
#define NPV(v) cout<<#v<<" "<<(v)<<endl

void Print(int n=30,char c='*')
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<c;
	}
	cout<<endl;
	
}



	typedef CFraction T;

	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;
//	typedef CVectorT<T> CVector;
	typedef CSimpleLpT<T> CSimpleLp;





	void main()
	{		
		T t[]=
		{
			4,-1,0,-1,0,0,0,
			-1,4,-1,0,-1,0,5,
			0,-1,4,-1,0,-1,-2,
			-1,0,-1,4,-1,0,5,
			0,-1,0,-1,4,-1,-2,
			0,0,-1,0,-1,4,6

			

		};

	CMatrix A,X,B,P,C,D,E,F,G,lA,lB;

	A.Create(t,6,7);
	MNPV(A);
	A.SolveLinearEq(X);
	B = A.TakeOut(1,1,6,6);
	MNPV(B);
	MNPV(X);
	MNPV(B*X);



	





	
	



	
	
	

	







	











	

	
	
}