//Domain.cpp
//模板类试验的主函数

#include <math.h>
#include"MatrixT.h"
#include "PolyApproxT.h"

#define MNPV(x) cout<<#x":"<<endl;\
				(x).Print();
#define NPV(v) cout<<#v<<" "<<(v)<<endl

void Print(int n=30,char c='*')
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<c;
	}
	cout<<endl;

}

	typedef long double  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;
	typedef CVectorT<T> CVector;

void main()
{		


	CPolyApprox Pa;

	T x[] = {    135,   150,   180,   210,   240,   270,
		         300,   330,   360,   390,   420,   480,   520,   600 };
	T y[] = {    3.8900,    3.7800,    3.6100,    3.4000,    3.2300,    3.0600,
		2.8600,    2.6700,   2.5300,    2.3000,   2.1400,    1.8400,    1.6100,    1.2500};

  


	T p[14];

	Pa.Create(x,y,p,14,1);
	Pa.Caculate();

	Pa.Print(2);
	Print();







	






















	
	




	




	









	






	







  


	





	

	
	
}