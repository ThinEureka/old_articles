//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"

void Print(int n=30)
{
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<'*';
	}
	cout<<endl;

}

void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmd<T> CChangeCmd;
	typedef CCmdSeries<T> CCmdSeries;
	T fA[]={
				5,3,5,8,3,
				0,0,0,5,6,
				2,0,3,2,3,
				0,0,0,4,2
		};
				

	T fB[]=
	{
		-1,1,-1,2,
		1,0,1,-1,
		2,4,3,1,
		-1,1,2,-2,
		1,1,1,
		3,4,4,
		-3,1,0
	};
	CMatrix A,B,C,D,E;
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	int m,n;


	



	D.Create(fA,4,5);
	D.Print();
	Print();

	D.ChangeToStairsF(&Cs1);
	Cs1.PrintCmds();
	Print();

	D.Create(fA,4,5);
	D.Print();
	Print();

	Cs1.MovePointerToHead();
	n = Cs1.GetCommandNum();
	for( int i= 0;i<n;i++)
	{
		cout<<Cs1.GetCurrentPosition()<<": ";
		Cs1.GetCurrentCmd().Print();
		cout<<endl;
		D.ChangeByCmd(Cs1.GetCurrentCmd());
		D.Print();
		Print();
		Cs1.MovePointerForward();
	}

	cmd.Create2( CFraction(4,3),'L',7);
	Cs1.AddNewCmd(cmd);

	cmd.Create2( CFraction(4,3),'r',7);
	Cs1.AddNewCmd(cmd);

	cmd.Create3( 'l',7,-5,1);
	Cs1.AddNewCmd(cmd);

	cmd.Create2( CFraction(4,3),'L',7);
	Cs1.AddNewCmd(cmd);

	cmd.Create3( 'l',7,-5,1);
	Cs1.AddNewCmd(cmd);

	cmd.Create2( CFraction(4,3),'L',7);
	Cs1.AddNewCmd(cmd);

	cmd.Create2( CFraction(4,3),'L',7);
	Cs1.AddNewCmd(cmd);

	cmd.Create3( 'l',7,-5,1);
	Cs1.AddNewCmd(cmd);

	cmd.Create2( CFraction(4,3),'L',7);
	Cs1.AddNewCmd(cmd);


	Print(60);
	Cs1.PrintCmds();



	n = Cs1.CountCmds(0);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(1);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(2);
	Print(60);
	cout<<n;
	Print();


	n = Cs1.CountCmds(3);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(4);
	Print(60);
	cout<<n;
	Print();


	n = Cs1.CountCmds(-1);
	Print(60);
	cout<<n;
	Print();


	n = Cs1.CountCmds(-2);
	Print(60);
	cout<<n;
	Print();



	n = Cs1.CountCmds(-3);
	Print(60);
	cout<<n;
	Print();



	n = Cs1.CountCmds(-4);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(11);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(12);
	Print(60);
	cout<<n;
	Print();

	n = Cs1.CountCmds(13);
	Print(60);
	cout<<n;
	Print();














	



	
	
}