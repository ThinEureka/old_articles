//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"

void Print(int n=30)
{
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<'*';
	}
	cout<<endl;

}

void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmd<T> CChangeCmd;
	typedef CCmdSeries<T> CCmdSeries;
	T fA[]={
//P19
			1,-9,13,7,
			-2,5,-1,3,
			3,-1,5,-5,
			2,8,-7,-10,
//16P22
			7,2,2,2,2,
			2,7,2,2,2,
			2,2,7,2,2,
			2,2,2,7,2,
			2,2,2,2,7,
//41P24
			1,8,0,5,5,
			8,3,2,8,3,
			6,1,0,4,2,
			4,8,5,7,6,
			5,7,7,7,6,
//66P28
			-1,1,-1,2,
			1,0,1,-1,
			2,4,3,1,
			-1,1,2,-2,
//82P31
			1,2,0,0,0,
			2,2,3,0,0,
			0,3,3,4,0,
			0,0,4,4,5,
			0,0,0,5,5,
//107P33
			1,1,1,1,
			2,3,4,1,
			3,4,1,2,
			4,1,2,3,
//123P34
			1,2,3,4,
			2,3,4,1,
			3,4,1,2,
			4,1,2,3,
//139P35
			7,6,5,4,3,2,
			9,7,8,9,4,3,
			7,4,9,7,0,0,
			5,3,6,1,0,0,
			0,0,5,6,0,0,
			0,0,6,8,0,0,
//175P35
			1,2,2,1,
			0,1,0,2,
			2,0,1,1,
			0,2,0,1,
//191P37
			1,1,2,3,
			3,-1,-1,-2,
			2,3,-1,-1,
			1,2,3,-1,
//207P38
			1,1,2,3,
			-4,-1,-1,-2,
			-6,3,-1,-1,
			-4,2,3,-1,
//223P38
			1,1,2,3,
			3,-4,-1,-2,
			2,-6,-1,-1,
			1,-4,3,-1,
//239P38
			1,1,1,3,
			3,-1,-4,-2,
			2,3,-6,-1,
			1,2,-4,-1,
//255P38
			1,1,2,1,
			3,-1,-1,-4,
			2,3,-1,-6,
			1,2,3,-4
//271

		};
				

	T fB[]=
	{
		-1,1,-1,2,
		1,0,1,-1,
		2,4,3,1,
		-1,1,2,-2,
		1,1,1,
		3,4,4,
		-3,1,0
	};
	CMatrix A,B,C,D,E;
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	int m,n;


	T t,t1,t2,t3,t4;

	D.Create( fA,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+16,5,5);

	t = D.GetDeterminant();

	cout<<t;
	Print();


	D.Create( fA+41,5,5);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+66,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+82,5,5);

	t = D.GetDeterminant();

	cout<<t;
	Print();


	D.Create( fA+107,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+123,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+139,6,6);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+175,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+191,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();


	D.Create( fA+207,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();

	D.Create( fA+223,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();



	D.Create( fA+239,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();


	D.Create( fA+255,4,4);

	t = D.GetDeterminant();

	cout<<t;
	Print();



	D.Create( fA+239,4,4);
	D.ChangeToStairsF(&Cs1);
	D.Print();

   
	

	

























	



	
	
}