//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"
#include "PolyApproxT.h"

#define MNPV(x) cout<<#x":"<<endl;\
				x.Print();


void Print(int n=30)
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<'*';
	}
	cout<<endl;

}


void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;

	T Ts[] ={
//			`	1,-1,0,0,
				1,-1,0,0,
				0,1,-1,0,
				0,0,1,-1,
				0,0,0,1,


				2,1,3,4,
				0,2,1,3,
				0,0,2,1,
				0,0,0,2
	



		
			};
	T Ts1[]=
			{1,3
			

			};
	T Pr[6];
			

	CMatrix A,B,C,D,E;
	CMatrix Ms[10];
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	CPolynomial Pn,Pn1,Pn2,Pn3;
	CPolyApprox Pa,Pa1,Pa2,Pa3;
	int m,n;

	B.Create(Ts,4,4);
	MNPV(B);
	Print();

	C.Create(Ts+16,4,4);
	MNPV(C);
	Print();

	A = !(~(C-B));
	MNPV(A);
	Print(60);



	




	
















	









	

	
	
}