//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"
#include "PolyApproxT.h"

#define MNPV(x) cout<<#x":"<<endl;\
				(x).Print();

void Print(int n=30)
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<'*';
	}
	cout<<endl;

}

	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;
	typedef CVectorT<T> CVector;

void main()
{		

	CMatrix A,B,C,D,E;
	CMatrix Ms[10];
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	CPolynomial Pn,Pn1,Pn2,Pn3;
	CPolyApprox Pa,Pa1,Pa2,Pa3;
	CVector a,b,c,d,e;
	CVector V,V1,V2,Vs[10];

	T t[] =
	{
		1,4,2,9,3,
		4,2,9,4,5,
		2,3,7,8,6,
		56,0,9,3,2
	};

	CMatrix M(t,4,5);
	M.Print();
	Print();

	M.Simplify(A);
	MNPV(A);
	Print();

	M.SolveLinearEq(NULL,B);
	MNPV(B);
	Print(60);

	a.Create(t+4,4,5);
	MNPV(a);
	Print();

	M.Simplify(A,-1,-1);
	MNPV(A);
	Print();

	M.SolveLinearEq(&a,B);
	MNPV(B);
	Print(60);

	MNPV(M*B);
	Print(60);




	









	






	










	




	








	












	









	

	
	
}