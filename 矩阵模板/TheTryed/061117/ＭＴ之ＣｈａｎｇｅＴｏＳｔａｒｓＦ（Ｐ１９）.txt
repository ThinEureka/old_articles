//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"
/*
//P34
T fA[]={
			1,2,3,4,
			2,3,4,1,
			3,4,1,2,
			4,1,2,3
		};
//p35
T fA[]={
		     7,6,5,4,3,2,
			 9,7,8,9,4,3,
			 7,4,9,7,0,0,
			 5,3,6,1,0,0,
			 0,0,5,6,0,0,
			 0,0,6,8,0,0
		};


*/

void Print()
{
	cout<<endl<<"*****************************"<<endl;
}

void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmd<T> CChangeCmd;
	typedef CCmdSeries<T> CCmdSeries;
	T fA[]={
			1,-9,13,7,
			-2,5,-1,3,
			3,-1,5,-5,
			2,8,-7,-10
		};
				

	T fB[]=
	{
		-1,1,-1,2,
		1,0,1,-1,
		2,4,3,1,
		-1,1,2,-2,
		1,1,1,
		3,4,4,
		-3,1,0
	};
	CMatrix A,B,C,D,E;
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	int m,n;


	D.Create(fA,4,4);
	D.Print();
	Print();
	D.ChangeToStairsF( &Cs1);

	Cs1.PrintCmds();
	Print();

	D.Print();
	Print();

	D.Create(fA,4,4);
	D.Print();
	Print();

	Cs1.MovePointerToHead();
	n = Cs1.GetCommandNum();
	for( int i= 0;i<n;i++)
	{
		cout<<Cs1.GetCurrentPosition()<<": ";
		Cs1.GetCurrentCmd().Print();
		cout<<endl;
		D.ChangeByCmd(Cs1.GetCurrentCmd());
		D.Print();
		Print();
		Cs1.MovePointerForward();
	}











	



	
	
}