//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"

void Print()
{
	cout<<endl<<"*****************************"<<endl;
}

void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmd<T> CChangeCmd;
	typedef CCmdSeries<T> CCmdSeries;
	T fA[]={
				2,-3,1,-5,
				1,-2,-1,-2,
				4,-2,7,-7,
				1,-1,2,-3
		};
	T fB[]=
	{
		-1,1,-1,2,
		1,0,1,-1,
		2,4,3,1,
		-1,1,2,-2,
		1,1,1,
		3,4,4,
		-3,1,0
	};
	CMatrix A,B,C,D,E;
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;


	Cs1.Clear();
	Cs1.Initial();

	cmd.Create3('R',1,-2,2);
	Cs1.AddNewCmd(cmd);

    cmd.Create3('R',3,-4,2);
	Cs1.AddNewCmd(cmd);

    cmd.Create3('R',4,-1,2);
	Cs1.AddNewCmd(cmd);

    cmd.Create1('R',1,2);
	Cs1.AddNewCmd(cmd);

    cmd.Create3('R',3,-6,2);
	Cs1.AddNewCmd(cmd);

    cmd.Create3('R',4,-1,2);
	Cs1.AddNewCmd(cmd);

	cmd.Create3('R',1,2,2);
	Cs1.AddNewCmd(cmd);

	cmd.Create3('R',1,CFraction(5,7),3);
	Cs1.AddNewCmd(cmd);

	cmd.Create3('R',2,CFraction(3,7),3);
	Cs1.AddNewCmd(cmd);

	cmd.Create2(CFraction(1,-7),'R',3);
	Cs1.AddNewCmd(cmd);

	Cs1.PrintCmds();

	D.Create(fA,4,4);
	D.Print();
	Print();
	Cs1.MovePointerToPosition(2);
	D.ChangeByCS( Cs1,1,4);
	D.Print();
	Print();

	D.ChangeByCS(Cs1,5,6);
	D.Print();
	Print();

	D.ChangeByCS(Cs1,7,10);
	D.Print();
	Print();

	Cs1.GetCurrentCmd().Print();

	

   

	



	

   




  

	



	




	
	
}