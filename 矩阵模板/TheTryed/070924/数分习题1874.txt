//Domain.cpp
//模板类试验的主函数

#include <math.h>
#include"MatrixT.h"
#include "PolyApproxT.h"
#include "MTApp.h"
#include "SimpleLpT.h"

#define MNPV(x) cout<<#x":"<<endl;\
				(x).Print();
#define NPV(v) cout<<#v<<" "<<(v)<<endl

void Print(int n=30,char c='*')
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<c;
	}
	cout<<endl;

}

	typedef CFraction T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;
	typedef CVectorT<T> CVector;
	typedef CSimpleLpT<T> CSimpleLp;

void main()
{		
	T t[]=
	{
		1,1,0,1,0,0,0,
		13,12,1,11,1,0,0,
		67,56,10,47,8,1,0,
		171,126,36,97,23,5,0,
		216,135,54,96,28,8,0,
		108,54,27,36,12,4,1
	};

	CMatrix A,X,B;

	A.Create(t,6,7);
	MNPV(A);
	A.SolveLinearEq(X);
	MNPV(X);
	B = A.TakeOut(1,1,6,6);
	MNPV(B);
	MNPV(B*X);









	

	
	
}