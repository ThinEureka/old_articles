//Domain.cpp
//模板类试验的主函数

#include"MatrixT.h"
#include "PolyApproxT.h"

void Print(int n=30)
{ 
	cout<<endl;
	for( int i=0;i<n;i++)
	{
		cout<<'*';
	}
	cout<<endl;

}

void main()
{
	typedef CFraction  T;
	typedef CMatrixT<T> CMatrix;
	typedef CChangeCmdT<T> CChangeCmd;
	typedef CCmdSeriesT<T> CCmdSeries;
	typedef CPolynomialT<T> CPolynomial;
	typedef CPolyApproxT<T> CPolyApprox;

	T fA[]={
//P68E1
//4*5
				0,0,1,-1,-3,
				0,2,-1,0,-1,
				0,6,-2,-4,3,
				0,-2,4,-7,4,

				1,0,1,0,-6,
				0,2,-2,0,5,
				0,0,0,1,-3,
				0,0,0,0,0,

				2,1,-1,1,
				3,-2,2,-3,
				5,1,-1,2,
				2,-1,1,-3,

				1,-2,3,-4,
				0,1,-1,1,
				1,3,0,1,
				0,-7,3,1,
	
				1,2,3,-1,
				3,2,1,-1,
				2,3,1,1,
				2,2,2,-1,
				5,5,2,0,

				1,1,-1,-1,
				2,1,1,1,
				4,3,-1,-1,
				1,2,-4,-4,

				1,-2,3,-4,
				0,1,-1,1,
				1,3,0,-3,
				1,-4,3,-2,

				1,0,-1,0,1,0,
				0,1,0,-1,0,1,
				1,-1,0,0,1,-1,
				0,1,-1,0,0,1,
				1,0,0,-1,1,0,

				2,3,0,-4,
				1,2,3,0,
				0,3,-7,8,

				1,2,8,
				1,2,-3,
				2,3,5,

				1,-2,5,
				2,-3,6,
				-1,2,-5,

				2,1,-1,
				1,-1,1,
				4,5,-5,

				
		};
				

	T fB[]=
	{

		-1,0,-2,
		0,0,1,
		2,0,7,
		0,0,1,

	};
	CMatrix A,B,C,D,E;
	CMatrix Ms[10];
	CChangeCmd cmd,cmd1,cmd2;
	CChangeCmd cmds[43];
	CCmdSeries Cs1,Cs2;
	bool bResults[10];
	char c;
	CPolynomial Pn,Pn1,Pn2,Pn3;
	Pn.Create(fA,10);
	Pn.Print();
	Print();
	cout<<(Pn.Caculate(0))<<endl;
	Print();
	cout<<(Pn.Caculate(2))<<endl;
	Pn1 = Pn2 = Pn;
	Pn1.Print();
	Print();
	Pn2.Print();
	Print();
	CPolynomial Pn4 = Pn;
	Pn4.Print();








	









	

	
	
}